Описание стратегии (на русском)

Стратегия инвестирования, реализованная в данном скрипте, представляет собой автоматизированный подход к управлению портфелем акций с еженедельными операциями. Она включает две основные стратегии: простую и тестовую, а также механизм продажи и выкупа активов при определённых условиях. Основные принципы стратегии:

Еженедельные покупки:
Покупки происходят каждую пятницу на основе цены закрытия дня.

Простая стратегия: Покупается только QQQ, с использованием полной суммы weekly_investment ($1000) для приобретения целого числа акций (math.floor(weekly_investment / close)), а общая сумма вложений (total_invested) увеличивается на реально потраченную сумму (units * close).

Тестовая стратегия: Выбор актива зависит от просадки цены QQQ относительно её максимального значения (max_price):
Если qqq_close >= max_price * 0.90 (просадка менее 10%), покупается QQQ.
Если qqq_close < max_price * 0.90 и >= max_price * 0.80 (просадка 10–20%), покупается QLD.
Если qqq_close < max_price * 0.80 (просадка более 20%), покупается TQQQ.
Количество акций определяется как целое число (math.floor(investment_source / ticker_close)), а сумма вложений увеличивается на units * ticker_close.

Продажа при --sell_threshold:
Если указан параметр --sell_threshold (например, 0.10), и цена QQQ падает ниже max_price * (1 - sell_threshold) (например, 90% от максимума), все активы (QQQ, QLD, TQQQ) продаются по цене закрытия дня.
Вырученная сумма добавляется в cash_balance как денежный пул, который становится частью Portfolio Value.

Покупки после продажи:
После формирования пула (cash_balance) покупаются QLD или TQQQ (в зависимости от условий просадки) на сумму до weekly_investment, используя только средства из пула, пока они доступны. Внешние средства не добавляются.
Когда пул исчерпан (или недостаточен для покупки хотя бы одной акции), возвращаемся к покупкам с использованием weekly_investment и внешних средств.

Выкуп QQQ:
Если цена QQQ восстановится до sell_price (цены продажи) и cash_balance > 0, выкупаются QQQ на всю доступную сумму (целое число акций). Обычная покупка по weekly_investment в этот день пропускается.
Остаток cash_balance сохраняется и используется для следующей покупки, уменьшая сумму внешнего взноса.

После выкупа:
После выкупа или исчерпания cash_balance возобновляются еженедельные покупки с использованием weekly_investment согласно начальной стратегии (QQQ, QLD, TQQQ в зависимости от просадки).

Оценка портфеля:
Portfolio Value рассчитывается как сумма стоимости всех акций (по последней цене закрытия) плюс остаток cash_balance.
Отчёт включает Total Invested, Final Portfolio Value, Profit, Max Drawdown, ROI и CAGR, а также распределение акций по тикерам.

Инструкция по запуску скрипта

Требования:
Установите Python 3.x.
Установите необходимые библиотеки:
bash
pip install yfinance pandas numpy matplotlib

Убедитесь, что у вас есть доступ к интернету для загрузки данных через yfinance.
Запуск скрипта:
Скрипт запускается через командную строку с использованием аргументов. Основная команда:
bash
python script.py <weekly_investment> --start_date <YYYY-MM-DD> --end_date <YYYY-MM-DD> --ticker_1 <ticker> --ticker_2 <ticker> --ticker_3 <ticker> --index <ticker> --dropdown_1 <float> --dropdown_2 <float> [--sell_threshold <float>] [--skip_simple] [--skip_graf]

Обязательные параметры:
<weekly_investment>: Сумма еженедельного инвестирования в долларах (например, 1000).
--start_date: Начальная дата в формате YYYY-MM-DD (например, 2020-01-01).
--end_date: Конечная дата в формате YYYY-MM-DD (по умолчанию текущая дата, например, 2020-06-26).
--ticker_1: Основной тикер (например, QQQ).
--ticker_2: Тикер для просадки 10% (например, QLD).
--ticker_3: Тикер для просадки 20% (по умолчанию совпадает с --ticker_2, например, TQQQ).
--index: Базовый тикер для расчёта просадки (например, QQQ).
--dropdown_1: Первый уровень просадки (например, 0.10 для 10%).
--dropdown_2: Второй уровень просадки (например, 0.20 для 20%).
Необязательные параметры:
--sell_threshold: Порог продажи активов (например, 0.10 для 10% просадки).
--skip_simple: Пропустить выполнение простой стратегии (флаг).
--skip_graf: Пропустить отображение графика (флаг).

Пример запуска:
Для тестирования стратегии с $1000 инвестиций с 2020-01-01 по 2020-06-26 с продажей при 10% просадке:

python script.py 1000 --start_date 2020-01-01 --end_date 2020-06-26 --ticker_1 QQQ --ticker_2 QLD --ticker_3 TQQQ --index QQQ --dropdown_1 0.10 --dropdown_2 0.20 --sell_threshold 0.10

Для запуска без графика:
bash
python script.py 1000 --start_date 2020-01-01 --end_date 2020-06-26 --ticker_1 QQQ --ticker_2 QLD --ticker_3 TQQQ --index QQQ --dropdown_1 0.10 --dropdown_2 0.20 --skip_graf

Вывод:
Скрипт генерирует отчёты в файлах report_simple.txt и report_test.txt, а также выводит в консоль общие метрики (Total Invested, Final Portfolio Value, Profit, Max Drawdown, ROI, CAGR) и распределение акций.
При использовании --skip_graf график не отображается.